# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    # Changed these colors to fit Solarized theme
    MAGENTA=$(tput setaf 125)
    ORANGE=$(tput setaf 166)
    GREEN=$(tput setaf 64)
    PURPLE=$(tput setaf 61)
    WHITE=$(tput setaf 244)
  else
    MAGENTA=$(tput setaf 5)
    ORANGE=$(tput setaf 4)
    GREEN=$(tput setaf 2)
    PURPLE=$(tput setaf 1)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  MAGENTA="\033[1;31m"
  ORANGE="\033[1;33m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  WHITE="\033[1;37m"
  BOLD=""
  RESET="\033[m"
fi

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export WHITE
export BOLD
export RESET

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

export PS1="\[${BOLD}${MAGENTA}\]\u \[$WHITE\]at \[$ORANGE\]\h \[$WHITE\]in \[$GREEN\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
export PS2="\[$ORANGE\]→ \[$RESET\]"

#bind key
bind 'set completion-ignore-case on'
#bind 'set completion-prefix-display-length 2'
#bind 'skip-completed-text on'
#bind 'visible-stats on'
# do not show hidden files in the list
bind 'set match-hidden-files off'
bind 'set show-all-if-ambiguous on'

shopt -s cdspell

#git
ssh-add ~/Software/confs/id_rsa_github >/dev/null 2>&1
ssh-add ~/Software/confs/id_rsa_meizu >/dev/null 2>&1

#path
PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
PATH=$PATH:/Users/houruhou/Software/bin
ADT_HOME=/Users/houruhou/Library/Android/sdk
PATH=$ADT_HOME/tools:$ADT_HOME/platform-tools:$ADT_HOME/build-tools/23.0.2:$PATH
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
PATH="/usr/local/Cellar/findutils/4.4.2/bin:$PATH"
PATH="/Users/houruhou/.rvm/gems/ruby-1.9.3-p551/bin:$PATH"
export VISUAL=vim
export EDITOR=vim
export HOMEBREW_EDITOR=vim
GRADLE_HOME="/Users/houruhou/.gradle"

#function
function cdcls(){
    cd "$@";clear
}
function mkcd(){
    mkdir -p "$@";cd "$@";clear
}
function adblog(){
    adb logcat -c
    suffix=`date +%F-%H-%M-%S`
    adb logcat -v threadtime | tee $suffix.log
}
function greps(){
    #grep -nrHi "$@" .
    grep -i --color=auto -nrHi --exclude-dir={.git,build} "$@" .
}
function text(){
    open -a TextWrangler "$@"
}

#alias
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias sl='ls'
alias l='ls'
alias grep='grep --color=auto -i '
alias md="open -a MacDown"
alias showandroid="cat ~/Workspace/OpenSource/local_android_installs"
alias showbuild="cat ~/Workspace/OpenSource/build_sample.gradle"
alias showkeyboard="open /Users/houruhou/Pictures/ScreenShots/keyboard.png"
alias showgradle="tree -L 3 /Users/houruhou/.gradle/wrapper/dists"
alias shark="java -jar /Users/houruhou/Software/confs/classyshark_3.2.jar"
alias st="open -a SourceTree"
alias eclipsegoogle="open -n /Users/houruhou/Software/bin/adt-bundle-mac-x86_64-20140702/eclipse/Eclipse.app --args -data /Users/houruhou/Workspace/Solarex/EclipseWorkspace"
alias eclipseopensource="open -n /Users/houruhou/Software/bin/adt-bundle-mac-x86_64-20140702/eclipse/Eclipse.app --args -data /Users/houruhou/Workspace/Solarex/EclipseWorkspace4Opensouce"
alias flushdns="sudo killall -HUP mDNSResponder"
alias fuckgfw="open -n /Users/houruhou/Software/zipfile/appified-xx-net/XX-Net.app"

#rvm
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#virtualenv
# virtualenvwrapper
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
export WORKON_HOME=/Users/houruhou/Workspace/Solarex/PythonWorkspace
[ -f /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh
[ -f /etc/bash_completion.d/virtualenvwrapper ] && source /etc/bash_completion.d/virtualenvwrapper
export PIP_VIRTUALENV_BASE=$WORKON_HOME
export PIP_RESPECT_VIRTUALENV=true

#path
blog="/Users/houruhou/Workspace/OpenSource/Blog+Wiki/blog"
simiki="/Users/houruhou/Workspace/OpenSource/Blog+Wiki/simiki"
wiki="/Users/houruhou/Workspace/OpenSource/Blog+Wiki/wiki"
posts="/Users/houruhou/Workspace/OpenSource/Blog+Wiki/blog/source/_posts"
flyme5="/Users/houruhou/Workspace/Meizu/flyme/app_flyme5_base"
mzupdate="/Users/houruhou/Workspace/Meizu/flyme/app_flyme5_base/meizu/Cloud/MzUpdate"
read="/Users/houruhou/Documents/pdf_to_sync"
proj="/Users/houruhou/Workspace/OpenSource/Projects"
reading="/Users/houruhou/Workspace/OpenSource/AndroidReadings"
study="/Users/houruhou/Workspace/OpenSource/Study"
sample="/Users/houruhou/Library/Android/sdk/samples/android-15"
training="/Users/houruhou/Workspace/OpenSource/Training+Guides"
decompile="/Users/houruhou/Workspace/OpenSource/decompile"

#z
. `brew --prefix`/etc/profile.d/z.sh
